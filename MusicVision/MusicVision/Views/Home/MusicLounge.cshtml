@{
    Layout = "~/Views/Shared/_LayoutLounge.cshtml";
}
<div id="app" class="container">   
    @model List<MusicVision.Models.MusicLoungeModel>
    <div class="col-md-3">
        <table>
            <tr>
                <th>Playlist Name</th>
            </tr>
            @foreach (var playlist in Model)
            {
                <tr>
                    <td><button type="button" v-on:click="playlistClick(JSON.parse('@Json.Encode(@playlist.TrackList[0])'),'@playlist.Playlist.Name')" class="btn btn-default" aria-label="Previous Track">@playlist.Playlist.Name</button></td>
                </tr>
            }
        </table>
    </div>
    
    @foreach (var playlist in Model)
    {
        <div class="col-md-3" v-if="activePlaylist=='@playlist.Playlist.Name'">
            <table>
                <tr>
                    <th>Playlist Songs</th>
                </tr>
                @foreach (var track in playlist.TrackList)
                {
                    <tr>
                        <td><button type="button" v-on:click="songClick(JSON.parse('@Json.Encode(@track)'))" class="btn btn-default" aria-label="Previous Track">@track.Name</button></td>
                    </tr>
                }
            </table>
        </div>
    }
    
    <footer class="container-fluid">
        <div class="col-md-3" v-if="songPlaying">
            <img :src="currentSongImage" height="64" width="64" />
            <div class="btn-group">
                <button type="button" v-on:click="playerClick('previous')" class="btn btn-default" aria-label="Previous Track"><span class="glyphicon glyphicon-step-backward" aria-hidden="true"></span></button>
                <button type="button" v-on:click="playerClick('play')" class="btn btn-default" aria-label="Play"><span class="glyphicon glyphicon-play" aria-hidden="true"></span></button>
                <button type="button" v-on:click="playerClick('pause')" class="btn btn-default" aria-label="Pause"><span class="glyphicon glyphicon-pause" aria-hidden="true"></span></button>
                <button type="button" v-on:click="playerClick('next')" class="btn btn-default" aria-label="Next Track"><span class="glyphicon glyphicon-step-forward" aria-hidden="true"></span></button>
            </div>
            <p>{{currentSongTitle}} by {{currentSongArtist}}</p></div>
    </footer>
</div>

@*Vue.js - flexible client-side JS Framework https://vuejs.org/*@
<script src="https://unpkg.com/vue"></script>

<script>  
    var app = new Vue({
        el: '#app',
        data: {
            songPlaying: false,
            currentSongImage: '',
            currentSongTitle: '',
            currentSongArtist: '',
            activePlaylist: ''
        },
        methods: {
            playerClick: function (commandName) {
                $.ajax({
                    type: "POST",
                    url: "/Home/PlayerClick",
                    data: '{commandName:"' + commandName + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log('/Home/PlayerClick call succeeded.');
                    },
                    failure: function (response) {
                        console.log('/Home/PlayerClick call failed.');
                    },
                    error: function (response) {
                        console.log('/Home/PlayerClick call errored.');
                    }
                });
            },
            playlistClick: function (songData, playlistName) {
                var self = this;
                self.songPlaying = true;
                self.currentSongImage = songData["Album"]["Images"][2]["Url"];
                self.currentSongTitle = songData["Name"];
                self.currentSongArtist = songData["Artists"][0]["Name"];
                self.activePlaylist = playlistName;

                $.ajax({
                    type: "POST",
                    url: "/Home/InitializePlayer",
                    data: '{trackURI:"' + songData["Uri"] + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log('/Home/InitializePlayer call succeeded.');
                    },
                    failure: function (response) {
                        console.log('/Home/InitializePlayer call failed.');
                    },
                    error: function (response) {
                        console.log('/Home/InitializePlayer call errored.');
                    }
                });
            },
            songClick: function (songData) {                
                var self = this;
                self.songPlaying = true;
                self.currentSongImage = songData["Album"]["Images"][2]["Url"];
                self.currentSongTitle = songData["Name"];
                self.currentSongArtist = songData["Artists"][0]["Name"];

                $.ajax({
                    type: "POST",
                    url: "/Home/InitializePlayer",
                    data: '{trackURI:"' + songData["Uri"] + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log('/Home/InitializePlayer call succeeded.');
                    },
                    failure: function (response) {
                        console.log('/Home/InitializePlayer call failed.');
                    },
                    error: function (response) {
                        console.log('/Home/InitializePlayer call errored.');
                    }
                });
            },
            getCurrentTrack: function () {

            },
            previousTrack: function () {
                playerClick('previous');
            },
            nextTrack: function () {
                playerClick('next');
            },
            play: function () {
                playerClick('play');
            },
            pause: function () {
                playerClick('pause');
            }
        },
        mounted() {            
            
        }
    })

</script>