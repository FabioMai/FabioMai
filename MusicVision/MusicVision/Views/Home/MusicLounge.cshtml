@{
    Layout = "~/Views/Shared/_LayoutLounge.cshtml";
}
<div id="app" class="container">    
    @model List<MusicVision.Models.MusicLoungeModel>
    <table>
        <tr>
            <th>Playlist Name</th>
        </tr>
        @foreach (var playlist in Model)
        {
            <tr>
                <td><button type="button" v-on:click="playlistClick('@playlist.TrackList[0].Uri')" class="btn btn-default" aria-label="Previous Track">@playlist.Playlist.Name</button></td>                
            </tr>            
        }
    </table>
    <div>
        @foreach (var playlist in Model) {
            <table>
                <tr>
                    <th>Playlist Songs</th>
                </tr>
                @foreach (var track in playlist.TrackList)
                {
                    <tr>
                        <td><button type="button" v-on:click="songClick('@track.Uri')" class="btn btn-default" aria-label="Previous Track">@track.Name</button></td>
                    </tr>
                }
            </table>
        }
    </div>

    <footer class="container-fluid">
        <div class="col-md-3" v-if="songPlaying">
            <img :src="currentSongImage" height="64" width="64" />
            <div class="btn-group">
                <button type="button" v-on:click="playerClick('previous')" class="btn btn-default" aria-label="Previous Track"><span class="glyphicon glyphicon-step-backward" aria-hidden="true"></span></button>
                <button type="button" v-on:click="playerClick('play')" class="btn btn-default" aria-label="Play"><span class="glyphicon glyphicon-play" aria-hidden="true"></span></button>
                <button type="button" v-on:click="playerClick('pause')" class="btn btn-default" aria-label="Pause"><span class="glyphicon glyphicon-pause" aria-hidden="true"></span></button>
                <button type="button" v-on:click="playerClick('next')" class="btn btn-default" aria-label="Next Track"><span class="glyphicon glyphicon-step-forward" aria-hidden="true"></span></button>
            </div>
            <p>{{currentSongTitle}} by {{currentSongArtist}}</p></div>
    </footer>
</div>

@*Vue.js - flexible client-side JS Framework https://vuejs.org/*@
<script src="https://unpkg.com/vue"></script>

<script>
    @*var playlistJSON = [{}];
    $(document).ready(function () {
        @foreach (var playlist in Model)
        {
            <text>
            playlistJSON['@playlist.Playlist.Name'] = [];

            @foreach (var track in playlist.TrackList)
            {
                <text>
            playlistJSON['@playlist.Playlist.Name'].push('@track.Uri.ToString()');
                </text>
            }
            </text>
        }
    });*@

    var app = new Vue({
        el: '#app',
        data: {
            songPlaying: true,
            currentSongImage: '',
            currentSongTitle: '',
            currentSongArtist: ''
        },
        methods: {
            playerClick: function (commandName) {
                $.ajax({
                    type: "POST",
                    url: "/Home/PlayerClick",
                    data: '{commandName:"' + commandName + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                    },
                    failure: function (response) {
                        console.log(response);
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            },
            playlistClick: function (songURI) {                
                $.ajax({
                    type: "POST",
                    url: "/Home/InitializePlayer",
                    data: '{trackURI:"' + songURI + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                    },
                    failure: function (response) {
                        console.log(response);
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            },
            songClick: function (songURI) {
                $.ajax({
                    type: "POST",
                    url: "/Home/InitializePlayer",
                    data: '{trackURI:"' + songURI + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                    },
                    failure: function (response) {
                        console.log(response);
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            },
            getCurrentTrack: function () {

            },
            previousTrack: function () {
                playerClick('previous');
            },
            nextTrack: function () {
                playerClick('next');
            },
            play: function () {
                playerClick('play');
            },
            pause: function () {
                playerClick('pause');
            }
        },
        mounted() {
            var self = this;

            //            self.currentSongImage = data.item.album.images[2].url,
            //            self.currentSongTitle = data.item.name,
            //            self.currentSongArtist = data.item.artists[0].name,
            //            self.songPlaying = true
        }
    })

</script>